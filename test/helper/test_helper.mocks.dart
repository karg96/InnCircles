// Mocks generated by Mockito 5.4.4 from annotations
// in dummy/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dummy/data/datasource/json_data_source.dart' as _i5;
import 'package:dummy/data/model/state_city_model.dart' as _i4;
import 'package:dummy/domain/repository/state_cities_repository.dart' as _i2;
import 'package:dummy/domain/usecases/fetch_state_cities.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeStateCitiesRepository_0 extends _i1.SmartFake
    implements _i2.StateCitiesRepository {
  _FakeStateCitiesRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StateCitiesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockStateCitiesRepository extends _i1.Mock
    implements _i2.StateCitiesRepository {
  MockStateCitiesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.StateCity>> getStateCities() => (super.noSuchMethod(
        Invocation.method(
          #getStateCities,
          [],
        ),
        returnValue: _i3.Future<List<_i4.StateCity>>.value(<_i4.StateCity>[]),
      ) as _i3.Future<List<_i4.StateCity>>);
}

/// A class which mocks [JsonDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockJsonDataSource extends _i1.Mock implements _i5.JsonDataSource {
  MockJsonDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.StateCity>> getStateCities() => (super.noSuchMethod(
        Invocation.method(
          #getStateCities,
          [],
        ),
        returnValue: _i3.Future<List<_i4.StateCity>>.value(<_i4.StateCity>[]),
      ) as _i3.Future<List<_i4.StateCity>>);
}

/// A class which mocks [FetchStateCitiesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchStateCitiesUseCase extends _i1.Mock
    implements _i6.FetchStateCitiesUseCase {
  MockFetchStateCitiesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.StateCitiesRepository get stateCitiesRepository => (super.noSuchMethod(
        Invocation.getter(#stateCitiesRepository),
        returnValue: _FakeStateCitiesRepository_0(
          this,
          Invocation.getter(#stateCitiesRepository),
        ),
      ) as _i2.StateCitiesRepository);

  @override
  _i3.Future<List<_i4.StateCity>> execute() => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i3.Future<List<_i4.StateCity>>.value(<_i4.StateCity>[]),
      ) as _i3.Future<List<_i4.StateCity>>);
}
